# Generated by Django 5.2.3 on 2025-07-09 15:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('leagues', '0001_initial'),
        ('matches', '0001_initial'),
        ('players', '0001_initial'),
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='match',
            name='dire_team',
            field=models.ForeignKey(blank=True, db_column='dire_team_id', db_comment='FK to the teams.team table for the dire side.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dire_matches', to='teams.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='league',
            field=models.ForeignKey(blank=True, db_column='leagueid', db_comment='FK to the leagues.league table.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='leagues.league'),
        ),
        migrations.AddField(
            model_name='match',
            name='radiant_team',
            field=models.ForeignKey(blank=True, db_column='radiant_team_id', db_comment='FK to the teams.team table for the radiant side.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='radiant_matches', to='teams.team'),
        ),
        migrations.AddField(
            model_name='pickban',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.hero'),
        ),
        migrations.AddField(
            model_name='pickban',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draft', to='matches.match'),
        ),
        migrations.CreateModel(
            name='PlayerMatchStats',
            fields=[
                ('player_match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='stats', serialize=False, to='matches.playermatch')),
                ('hero_damage', models.PositiveIntegerField(blank=True, null=True)),
                ('tower_damage', models.PositiveIntegerField(blank=True, null=True)),
                ('hero_healing', models.PositiveIntegerField(blank=True, null=True)),
                ('stuns', models.FloatField(blank=True, help_text='Total stun duration dealt in seconds.', null=True)),
                ('obs_placed', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sen_placed', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('creeps_stacked', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rune_pickups', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ability_uses', models.JSONField(blank=True, help_text="e.g., {'ability_name': count}", null=True)),
                ('damage_targets', models.JSONField(blank=True, help_text="e.g., {'hero_name': damage_amount}", null=True)),
            ],
            options={
                'verbose_name': 'Player Match Stats',
                'verbose_name_plural': 'Player Match Stats',
                'db_table': 'player_match_stats',
            },
        ),
        migrations.AddField(
            model_name='playermatch',
            name='hero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appearances', to='core.hero'),
        ),
        migrations.AddField(
            model_name='playermatch',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='player_matches', to='matches.match'),
        ),
        migrations.AddField(
            model_name='playermatch',
            name='player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_history', to='players.player'),
        ),
        migrations.AddIndex(
            model_name='publicmatch',
            index=models.Index(fields=['lobby_type', 'game_mode', 'start_time'], name='public_matc_lobby_t_040a97_idx'),
        ),
        migrations.AddIndex(
            model_name='publicmatch',
            index=models.Index(fields=['avg_rank_tier'], name='public_matc_avg_ran_c92c6c_idx'),
        ),
        migrations.AddIndex(
            model_name='matchpatch',
            index=models.Index(fields=['patch_major', 'patch_minor'], name='match_patch_patch_m_e4fc25_idx'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(condition=models.Q(('duration__gte', 0)), name='duration_non_negative'),
        ),
        migrations.AddIndex(
            model_name='pickban',
            index=models.Index(fields=['hero', 'is_pick'], name='picks_bans_hero_id_e3801d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pickban',
            unique_together={('match', 'order')},
        ),
        migrations.AddIndex(
            model_name='playermatch',
            index=models.Index(fields=['player', 'hero'], name='player_matc_player__feb06e_idx'),
        ),
        migrations.AddIndex(
            model_name='playermatch',
            index=models.Index(fields=['match', 'hero'], name='player_matc_match_i_97011b_idx'),
        ),
        migrations.AddConstraint(
            model_name='playermatch',
            constraint=models.CheckConstraint(condition=models.Q(('player_slot__gte', 0), ('player_slot__lte', 132)), name='player_slot_valid_range'),
        ),
        migrations.AlterUniqueTogether(
            name='playermatch',
            unique_together={('match', 'player_slot')},
        ),
    ]
